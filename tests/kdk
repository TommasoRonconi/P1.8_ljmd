# -*- Makefile -*-
SHELL=/bin/sh

dirR = $(PWD)
dirI = $(dirR)/../include
dirL = $(dirR)/../src
dirB = $(dirR)/../build
VPATH=$(dirL)

CC=gcc
CFLAGS=-Wall -Wextra -g -O3 -ffast-math -fomit-frame-pointer -I$(dirI)
LDLIBS=-lm -Wl,-rpath,$(dirL) -lvelverlet_time_integration -lcompute_force -lutilities_ljmd -linput -loutput

exe_name = $(dirR)/ljmd-serial.x

OBJ = $(dirB)/velverlet_time_integration.o $(dirB)/output.o $(dirB)/input.o $(dirB)/utilities_ljmd.o $(dirB)/compute_force.o test.o
LIBS = $(dirB)/velverlet_time_integration.so $(dirB)/output.so $(dirB)/input.so $(dirB)/utilities_ljmd.so $(dirB)/compute_force.so 
LIBS = $(OBJ:.o=.so)
 

default: $(exe_name)

clean:
	rm -f *.mod *.o $(dirR)/ljmd-serial.x $(OBJ) $(LIBS) $(dirL)/*~ $(dirI)/*~

$(exe_name): test.o $(OBJ) $(LIBS)
	$(CC) -o $@ $(CFLAGS) $^ $(LDLIBS)

%.o: %.c
	$(CC) $(CFLAGS) -c -fPIC $< -o $@

%.so: %.o
	$(CC) -shared -o $@ $<

# pre-requisites
# .o
$(dirB)/test.o: $(dirR)/test.c $(dirI)/compute_force.h $(dirI)/data_structure.h $(dirI)/utilities_ljmd.h $(dirR)/myunittest.h

$(dirB)/velverlet_time_integration.o: $(dirI)/velverlet_time_integration.h $(dirI)/data_structure.h $(dirI)/utilities_ljmd.h

$(dirB)/compute_force.o: $(dirI)/compute_force.h $(dirI)/data_structure.h $(dirI)/utilities_ljmd.h

$(dirB)/utilities_ljmd.o: $(dirI)/utilities_ljmd.h

$(dirB)/input.o: $(dirI)/input.h $(dirI)/data_structure.h $(dirI)/utilities_ljmd.h

$(dirB)/output.o: $(dirI)/output.h $(dirI)/data_structure.h

# .so
$(dirB)/velverlet_time_integration.so: $(dirB)/velverlet_time_integration.o

$(dirB)/compute_force.so: $(dirB)/compute_force.o

$(dirB)/utilities_ljmd.so: $(dirB)/utilities_ljmd.o

$(dirB)/input.so: $(dirB)/input.o

$(dirB)/output.so: $(dirB)/output.o



# -*- Makefile -*-
SHELL=/bin/sh

CC=gcc

exe_name = $(dirR)/ljmd-serial.x

dirR = $(PWD)
dirI = $(dirR)/../include
dirL = $(dirR)/../src

CFLAGS=-Wall -Wextra -g -O3 -ffast-math -fomit-frame-pointer -I$(dirI)
LDLIBS=-lm -Wl,-rpath,$(dirL)


VPATH=$(dirL)

OBJ = velverlet_time_integration.o output.o input.o utilities_ljmd.o compute_force.o test.o
LIBS = velverlet_time_integration.so output.so input.so utilities_ljmd.so compute_force.so 

default: $(exe_name)

clean:
	rm -f *.mod *.o $(dirR)/ljmd-serial.x $(OBJ) $(dirL)/*~ $(dirI)/*~


$(exe_name): $(OBJ) $(LIBS)
	$(CC) -o $@ $(CFLAGS) $^ $(LDLIBS)

%.o: %.c
	$(CC) $(CFLAGS) -c -fPIC $< -o $@

%.so: %.o
	$(CC) -shared -o $@ $<

# pre-requisites
# .o
test.o: test.c $(dirI)/compute_force.h $(dirI)/data_structure.h $(dirI)/utilities_ljmd.h $(dirR)/myunittest.h

velverlet_time_integration.o: $(dirI)/velverlet_time_integration.h $(dirI)/data_structure.h $(dirI)/utilities_ljmd.h

compute_force.o: $(dirI)/compute_force.h $(dirI)/data_structure.h $(dirI)/utilities_ljmd.h

utilities_ljmd.o: $(dirI)/utilities_ljmd.h

input.o: $(dirI)/input.h $(dirI)/data_structure.h $(dirI)/utilities_ljmd.h

output.o: $(dirI)/output.h $(dirI)/data_structure.h

# .so
velverlet_time_integration.so: $(dirI)/velverlet_time_integration.h $(dirI)/data_structure.h $(dirI)/utilities_ljmd.h

compute_force.so: $(dirI)/compute_force.h $(dirI)/data_structure.h $(dirI)/utilities_ljmd.h

utilities_ljmd.so: $(dirI)/utilities_ljmd.h

input.so: $(dirI)/input.h $(dirI)/data_structure.h $(dirI)/utilities_ljmd.h

output.so: $(dirI)/output.h $(dirI)/data_structure.h
